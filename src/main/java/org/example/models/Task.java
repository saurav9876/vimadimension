// src/main/java/org/example/models/Task.java
package org.example.models;

import jakarta.persistence.*;

@Entity
@Table(name = "tasks")
public class Task {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id; // Changed from long to Long

    @Column(nullable = false)
    private String name;

    @Column(columnDefinition = "TEXT")
    private String description;

    @Column(name = "project_id", nullable = false)
    private Long projectId; // Changed from long to Long, maps to Project's ID

    // We've removed the static idCounter as the DB will handle ID generation.

    // JPA requires a no-arg constructor
    public Task() {
    }

    public Task(String name, String description, Long projectId) {
        // ID is no longer set here; it's generated by the database upon saving.
        this.name = name;
        this.description = description;
        this.projectId = projectId;
    }

    // Getters
    public Long getId() {
        return id;
    }

    public String getName() {
        return name;
    }

    public String getDescription() {
        return description;
    }

    public Long getProjectId() {
        return projectId;
    }

    // Setters
    public void setId(Long id) { // Setter for ID might be used by JPA
        this.id = id;
    }

    public void setName(String name) {
        this.name = name;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    public void setProjectId(Long projectId) {
        this.projectId = projectId;
    }

    @Override
    public String toString() {
        return "Task{" +
                "id=" + id +
                ", name='" + name + '\'' +
                ", description='" + description + '\'' +
                ", projectId=" + projectId +
                '}';
    }
}